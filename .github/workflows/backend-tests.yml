name: Backend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "backend/uv.lock"

    - name: Install dependencies
      run: uv sync --dev

    - name: Run linting
      run: uv run ruff check .

    - name: Run type checking
      run: uv run mypy app/

    - name: Run tests
      run: uv run pytest -v --tb=short
      env:
        DATABASE_URL: "sqlite+aiosqlite:///:memory:"
        SUPABASE_URL: http://localhost:54321
        SUPABASE_KEY: test-key-for-ci
        STORAGE_BUCKET_NAME: test-images
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY || 'test-key-for-ci' }}

    - name: Generate coverage report
      run: |
        uv run pytest --cov=app --cov-report=xml --cov-report=html
      env:
        DATABASE_URL: "sqlite+aiosqlite:///:memory:"
        SUPABASE_URL: http://localhost:54321
        SUPABASE_KEY: test-key-for-ci
        STORAGE_BUCKET_NAME: test-images
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY || 'test-key-for-ci' }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
      continue-on-error: true