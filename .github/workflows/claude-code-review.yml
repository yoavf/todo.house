name: Claude Code Review

on:
  # Manual trigger via GitHub Actions UI
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to review'
        required: true
        type: number
  
  # Trigger when a PR is labeled with "claude-review"
  pull_request:
    types: [labeled]
    
  # Optional: Uncomment to enable automatic reviews on all PRs
  # pull_request:
  #   types: [opened, synchronize]
  #   paths-ignore:
  #     - '**/*.md'

jobs:
  claude-review:
    # Only run if triggered manually or if the "claude-review" label was added
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && github.event.label.name == 'claude-review')

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      id-token: write

    steps:
      - name: Get PR context for manual trigger
        id: get-pr
        if: github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.inputs.pr_number }}
            });
            core.setOutput('pr_head_sha', pr.data.head.sha);
            core.setOutput('pr_number', ${{ github.event.inputs.pr_number }});

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && steps.get-pr.outputs.pr_head_sha || github.event.pull_request.head.sha }}
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        # Skip review for certain conditions
        if: |
          !contains(github.event.pull_request.title, '[skip-review]') &&
          !contains(github.event.pull_request.title, '[WIP]')
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # Pass PR number for manual triggers
          pr_number: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.pr_number || github.event.pull_request.number }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            IMPORTANT: This project is in MVP Development Phase. Please review accordingly.

            Please review this PR with MVP priorities in mind:

            1. CRITICAL ISSUES (must fix before merge):
               - Bugs that break functionality
               - Security vulnerabilities (unless obvious choices are made for testing and documented in the code)
               - Data loss risks

            2. NON-CRITICAL IMPROVEMENTS:
               For any non-critical improvements (code quality, performance, error handling, test coverage, architecture):
               - Simply mention them as suggestions in your review comment
               - Use clear priority indicators: [Critical], [Important], [Nice-to-have]
               - Focus on teaching Python best practices where relevant

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          use_sticky_comment: true

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Allow Claude to use tools for code inspection only
          allowed_tools: "Bash(cat),Bash(grep),Bash(find),Read,Grep"

